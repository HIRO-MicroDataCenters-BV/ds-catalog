openapi: 3.1.0
info:
  title: Data Space Catalog
  description: The service provides a REST API for managing and sharing catalog data.
    Interacts with connector services to obtain information about data products.
  contact:
    name: HIRO-MicroDataCenters
    email: all-hiro@hiro-microdatacenters.nl
  license:
    name: MIT
    url: https://github.com/HIRO-MicroDataCenters-BV/ds-catalog/blob/main/LICENSE
  version: 0.1.1
paths:
  /metrics:
    get:
      summary: Metrics
      description: Endpoint that serves Prometheus metrics.
      operationId: metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health-check/:
    get:
      summary: Health check
      description: Returns a 200 status code if the service is up and running
      operationId: health_check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  /catalog-items/:
    get:
      tags:
      - Catalog Items
      summary: Get the list of catalog items
      description: 'Returns the list of catalog items with the ability to search,
        filter and

        paginate.'
      operationId: get_catalog_items
      parameters:
      - name: page
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Page
      - name: pageSize
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Pagesize
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Orderby
      - name: orderDirection
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/OrderDirection'
          - type: 'null'
          title: Orderdirection
      - name: search
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Search
      - name: ontology
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/Ontology'
          - type: 'null'
          title: Ontology
      - name: isLocal
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Islocal
      - name: isShared
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Isshared
      - name: creator__id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Creator  Id
      - name: created
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created
      - name: created__gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created  Gte
      - name: created__lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created  Lte
      - name: dataProduct__id
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Dataproduct  Id
      - name: dataProduct__size__gte
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dataproduct  Size  Gte
      - name: dataProduct__size__lte
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dataproduct  Size  Lte
      - name: dataProduct__mimetype
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Dataproduct  Mimetype
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResult_CatalogItem_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Catalog Items
      summary: Create a catalog item
      description: Create a catalog item
      operationId: create_catalog_item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemForm'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
          headers:
            Location:
              description: The URL of the newly created resource
              schema:
                type: string
                format: uri
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /catalog-items/{id}/:
    get:
      tags:
      - Catalog Items
      summary: Get the catalog item
      description: Get the catalog item
      operationId: get_catalog_item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
        '404':
          description: Catalog Item not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Catalog Items
      summary: Update the catalog item
      description: Update the catalog item
      operationId: update_catalog_item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemForm'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
        '404':
          description: Catalog Item not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Catalog Items
      summary: Delete the catalog item
      description: Delete the catalog item
      operationId: delete_catalog_item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      responses:
        '204':
          description: Successful Response
        '404':
          description: Catalog Item not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /catalog-items/{id}/data/:
    get:
      tags:
      - Catalog Items Data
      summary: Get the data for the catalog item
      description: Returns the data for the catalog item
      operationId: get_catalog_item_data
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Catalog Item ID
          title: Id
        description: Catalog Item ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItemData'
        '404':
          description: Catalog Item or Catalog Item Data not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Catalog Items Data
      summary: Create the data for the catalog item
      description: Create the data for the catalog item
      operationId: create_catalog_item_data
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Catalog Item ID
          title: Id
        description: Catalog Item ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemData'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItemData'
          headers:
            Location:
              description: The URL of the newly created resource
              schema:
                type: string
                format: uri
        '404':
          description: Catalog item not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Catalog Items Data
      summary: Change the data for the catalog item
      description: Change the data for the catalog item
      operationId: change_catalog_item_data
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Catalog Item ID
          title: Id
        description: Catalog Item ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemData'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItemData'
        '404':
          description: Catalog Item or Catalog Item Data not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Catalog Items Data
      summary: Delete the data for the catalog item
      description: Delete the data for the catalog item
      operationId: delete_catalog_item_data
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          description: Catalog Item ID
          title: Id
        description: Catalog Item ID
      responses:
        '204':
          description: Successful Response
        '404':
          description: Catalog Item or Catalog Item Data not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /catalog-items/{id}/share/:
    post:
      tags:
      - Catalog Items Sharing
      summary: Share a catalog item
      description: Share a catalog item to the marketplace
      operationId: share_catalog_item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemShareForm'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
          headers:
            Location:
              description: The URL of the newly created resource
              schema:
                type: string
                format: uri
        '404':
          description: Catalog Item not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /catalog-items/import/:
    post:
      tags:
      - Catalog Items Importing
      summary: Import a catalog item
      description: Import a catalog item from the local catalog
      operationId: import_catalog_item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemImportForm'
        required: true
      responses:
        '201':
          description: Successful Response
          headers:
            Location:
              description: The URL of the newly created resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    CatalogItem:
      properties:
        ontology:
          $ref: '#/components/schemas/Ontology'
        title:
          type: string
          title: Title
        summary:
          type: string
          title: Summary
        id:
          type: string
          format: uuid
          title: Id
        isLocal:
          type: boolean
          title: Islocal
        isShared:
          type: boolean
          title: Isshared
        created:
          type: string
          format: date-time
          title: Created
        creator:
          $ref: '#/components/schemas/User'
        dataProducts:
          items:
            $ref: '#/components/schemas/DataProduct'
          type: array
          title: Dataproducts
        _links:
          additionalProperties:
            type: string
          type: object
          title: ' Links'
      type: object
      required:
      - ontology
      - title
      - summary
      - id
      - isLocal
      - isShared
      - created
      - creator
      - dataProducts
      - _links
      title: CatalogItem
      examples:
      - _links:
          data: /catalog-items/c6b59f81-e7b5-46d6-84b9-c0dee695c7ec/data
        created: '2023-08-27T14:00:00Z'
        creator:
          fullName: John Smith
          id: c6b59f81-e7b5-46d6-84b9-c0dee695c7ec
        dataProducts:
        - _links:
            accessPoint: /connector1/interface2/8D8AC610-566D-4EF0-9C22-186B2A5ED793/
          digest: 1df50e8ad219e34f0b911e097b7b588e31f9b435
          id: 8D8AC610-566D-4EF0-9C22-186B2A5ED793
          mimetype: text/plain
          name: cancer_data_2024
          size: 1024
          source:
            connector:
              id: connector1
            interface:
              id: interface2
            node:
              host: localhost
              port: 8000
              protocol: https
        id: c6b59f81-e7b5-46d6-84b9-c0dee695c7ec
        isLocal: true
        isShared: false
        ontology: DCAT-3
        summary: Some description
        title: Cancer 2024
    CatalogItemData:
      type: object
      title: CatalogItemData
      description: Catalog Item Data in Json-ld format
      examples:
      - '@context':
          dcat: http://www.w3.org/ns/dcat#
          dcterms: http://purl.org/dc/terms/
          ex: http://example.org/
          rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
          rdfs: http://www.w3.org/2000/01/rdf-schema#
          spdx: http://spdx.org/rdf/terms#
          xsd: http://www.w3.org/2001/XMLSchema#
        ex:catalog:
          '@type': dcat:Catalog
          dcat:dataset:
            '@id': ex:dataset-001
          dcat:service:
            '@id': ex:data-service-001
          dcat:version: 1.0.0
          dcterms:identifier: c6b59f81-e7b5-46d6-84b9-c0dee695c7ec
          dcterms:title:
            '@language': en
            '@value': Cancer 2024
        ex:data-service-001:
          '@type': dcat:DataService
          dcat:endpointURL:
            '@id': /connector1/interface2/dataproduct1/
          dcat:servesDataset:
            '@id': ex:dataset-001
        ex:dataset-001:
          '@type': dcat:Dataset
          dcat:distribution:
            '@id': ex:distribution-001
          dcterms:identifier: dataproduct1
          dcterms:title:
            '@language': en
            '@value': cancer_data_2024
        ex:distribution-001:
          '@type': dcat:Distribution
          dcat:accessService:
            '@id': ex:data-service-001
          dcat:byteSize:
            '@type': xsd:nonNegativeInteger
            '@value': '1024'
          dcat:mediaType: text/plain
          spdx:checksum:
            '@type': spdx:Checksum
            spdx:algorithm: spdx:checksumAlgorithm_sha256
            spdx:checksumValue: 3e23e8160039594a33894f6564e1b1348bb8e482aa04f83e4d19b84
    CatalogItemForm:
      properties:
        ontology:
          $ref: '#/components/schemas/Ontology'
        title:
          type: string
          title: Title
        summary:
          type: string
          title: Summary
        dataProducts:
          items:
            $ref: '#/components/schemas/DataProductForm'
          type: array
          title: Dataproducts
      type: object
      required:
      - ontology
      - title
      - summary
      - dataProducts
      title: CatalogItemForm
      examples:
      - dataProducts:
        - accessPointUrl: /connector1/interface2/dataproduct1/
          digest: 1df50e8ad219e34f0b911e097b7b588e31f9b435
          id: dataproduct1
          mimetype: text/plain
          name: cancer_data_2024
          size: 1024
          source:
            connector:
              id: connector1
            interface:
              id: interface2
            node:
              host: localhost
              port: 8000
              protocol: https
        ontology: DCAT-3
        summary: Some description
        title: Cancer 2024
    CatalogItemImportForm:
      properties:
        ontology:
          $ref: '#/components/schemas/Ontology'
        title:
          type: string
          title: Title
        summary:
          type: string
          title: Summary
        dataProducts:
          items:
            $ref: '#/components/schemas/DataProductForm'
          type: array
          title: Dataproducts
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - ontology
      - title
      - summary
      - dataProducts
      - id
      title: CatalogItemImportForm
      examples:
      - dataProducts:
        - accessPointUrl: /connector1/interface2/dataproduct1/
          digest: 1df50e8ad219e34f0b911e097b7b588e31f9b435
          id: dataproduct1
          mimetype: text/plain
          name: cancer_data_2024
          size: 1024
          source:
            connector:
              id: connector1
            interface:
              id: interface2
            node:
              host: localhost
              port: 8000
              protocol: https
        id: c6b59f81-e7b5-46d6-84b9-c0dee695c7ec
        ontology: DCAT-3
        summary: Some description
        title: Cancer 2024
    CatalogItemShareForm:
      properties:
        marketplaceId:
          type: string
          format: uuid
          title: Marketplaceid
      type: object
      required:
      - marketplaceId
      title: CatalogItemShareForm
    Connector:
      properties:
        id:
          type: string
          title: Id
      type: object
      required:
      - id
      title: Connector
    DataProduct:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        size:
          anyOf:
          - type: integer
            exclusiveMinimum: 0.0
          - type: 'null'
          title: Size
        mimetype:
          type: string
          title: Mimetype
        digest:
          type: string
          title: Digest
        source:
          $ref: '#/components/schemas/Source'
        _links:
          additionalProperties:
            type: string
          type: object
          title: ' Links'
      type: object
      required:
      - id
      - name
      - size
      - mimetype
      - digest
      - source
      - _links
      title: DataProduct
    DataProductForm:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        size:
          anyOf:
          - type: integer
            exclusiveMinimum: 0.0
          - type: 'null'
          title: Size
        mimetype:
          type: string
          title: Mimetype
        digest:
          type: string
          title: Digest
        source:
          $ref: '#/components/schemas/Source'
        accessPointUrl:
          type: string
          title: Accesspointurl
      type: object
      required:
      - id
      - name
      - size
      - mimetype
      - digest
      - source
      - accessPointUrl
      title: DataProductForm
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheck:
      properties:
        status:
          type: string
          title: Status
          examples:
          - OK
      type: object
      required:
      - status
      title: HealthCheck
    Interface:
      properties:
        id:
          type: string
          title: Id
      type: object
      required:
      - id
      title: Interface
    Node:
      properties:
        protocol:
          type: string
          title: Protocol
        host:
          type: string
          title: Host
        port:
          type: integer
          exclusiveMinimum: 0.0
          title: Port
      type: object
      required:
      - protocol
      - host
      - port
      title: Node
    Ontology:
      type: string
      enum:
      - DCAT-3
      - DCAT-AP
      title: Ontology
    OrderDirection:
      type: string
      enum:
      - asc
      - desc
      title: OrderDirection
    PaginatedResult_CatalogItem_:
      properties:
        page:
          type: integer
          exclusiveMinimum: 0.0
          title: Page
          examples:
          - 1
        size:
          type: integer
          exclusiveMinimum: 0.0
          title: Size
          examples:
          - 100
        items:
          items:
            $ref: '#/components/schemas/CatalogItem'
          type: array
          title: Items
      type: object
      required:
      - page
      - size
      - items
      title: PaginatedResult[CatalogItem]
    Source:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        node:
          anyOf:
          - $ref: '#/components/schemas/Node'
          - type: 'null'
        interface:
          anyOf:
          - $ref: '#/components/schemas/Interface'
          - type: 'null'
      type: object
      required:
      - connector
      title: Source
    User:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        fullName:
          type: string
          title: Fullname
      type: object
      required:
      - id
      - fullName
      title: User
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
